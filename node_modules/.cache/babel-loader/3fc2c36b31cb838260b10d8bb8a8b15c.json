{"ast":null,"code":"var _jsxFileName = \"/Users/kurusu/todo_app/src/Form.js\";\nimport React, { useState } from 'react';\n\nconst Form = () => {\n  const initialState = [{\n    task: 'サンプルテキスト１',\n    isCompleted: false\n  }, {\n    task: 'サンプルテキスト２',\n    isCompleted: false\n  }, {\n    task: 'サンプルテキスト３',\n    isCompleted: false\n  }];\n  const [todos, setTodo] = useState(initialState);\n  const [task, setTask] = useState(''); //入力した情報を保持するための変数taskをuseStateで追加。\n\n  const handleNewTask = event => {\n    setTask(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (task === '') return;\n    setTodo(todos => [...todos, {\n      task,\n      isCompleted: false\n    }]);\n    setTask('');\n  };\n\n  const handleRemoveTask = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodo(newTodos);\n  }; //inputタグに入力した値を取得するためにonChangeイベントを設定し、value属性の値に追加したtaskを指定。\n  //onChangeイベントで実行する関数名は、handleNewTask。\n  //入力したタスクをtodoリストに保存するためにFormタグを追加。FormタグにはonSubmitイベントを追加します。\n  //onSubmitイベントで実行する関数名は、handleSubmitとします。onSubmitイベントをEnterを押すと発行されます。\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Todo App\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: task,\n    placeholder: \"\\u3053\\u3053\\u306BTodo\\u3092\\u5165\\u529B\",\n    onChange: handleNewTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, todos.map((todo, index) =>\n  /*#__PURE__*/\n  //ToDoリストを画面上に表示するため、Todoリストが保存されているtodosをmap関数で展開。\n  React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => handleRemoveTask(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"\\u2611\\uFE0F\"), todo.task)))));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/kurusu/todo_app/src/Form.js"],"names":["React","useState","Form","initialState","task","isCompleted","todos","setTodo","setTask","handleNewTask","event","target","value","handleSubmit","preventDefault","handleRemoveTask","index","newTodos","splice","map","todo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,YAAY,GAAG,CACjB;AACIC,IAAAA,IAAI,EAAE,WADV;AAEIC,IAAAA,WAAW,EAAE;AAFjB,GADiB,EAKjB;AACID,IAAAA,IAAI,EAAE,WADV;AAEIC,IAAAA,WAAW,EAAE;AAFjB,GALiB,EASjB;AACID,IAAAA,IAAI,EAAE,WADV;AAEIC,IAAAA,WAAW,EAAE;AAFjB,GATiB,CAArB;AAeA,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBN,QAAQ,CAACE,YAAD,CAAjC;AAEA,QAAM,CAACC,IAAD,EAAOI,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CAlBe,CAmBf;;AAEA,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAC7BF,IAAAA,OAAO,CAAEE,KAAK,CAACC,MAAN,CAAaC,KAAf,CAAP;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIH,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACI,cAAN;AACA,QAAGV,IAAI,KAAK,EAAZ,EAAgB;AAChBG,IAAAA,OAAO,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAU;AAAEF,MAAAA,IAAF;AAAQC,MAAAA,WAAW,EAAE;AAArB,KAAV,CAAV,CAAP;AACAG,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GALD;;AAOA,QAAMO,gBAAgB,GAAGC,KAAK,IAAI;AAC9B,UAAMC,QAAQ,GAAG,CAAC,GAAGX,KAAJ,CAAjB;AACAW,IAAAA,QAAQ,CAACC,MAAT,CAAgBF,KAAhB,EAAsB,CAAtB;AACAT,IAAAA,OAAO,CAACU,QAAD,CAAP;AACH,GAJD,CAhCe,CAsCf;AACA;AAEA;AACA;;;AAEA,sBACI;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,IAAA,QAAQ,EAAGJ,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,KAAK,EAAGT,IAAf;AAAsB,IAAA,WAAW,EAAC,0CAAlC;AAA+C,IAAA,QAAQ,EAAEK,aAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,KAAK,CAACa,GAAN,CAAU,CAACC,IAAD,EAAOJ,KAAP;AAAA;AAAoB;AAChC;AAAI,IAAA,GAAG,EAAGA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAM,IAAA,OAAO,EAAG,MAAKD,gBAAgB,CAACC,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAIEI,IAAI,CAAChB,IAJP,CADE,CADF,CAJJ,CADJ,CADJ;AAmBH,CA/DD;;AAiEA,eAAeF,IAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Form = () => {\n    const initialState = [\n        {\n            task: 'サンプルテキスト１',\n            isCompleted: false\n        },\n        {\n            task: 'サンプルテキスト２',\n            isCompleted: false\n        },\n        {\n            task: 'サンプルテキスト３',\n            isCompleted: false\n        },     \n    ]\n\n    const [todos, setTodo] = useState(initialState);\n\n    const [task, setTask] = useState('')\n    //入力した情報を保持するための変数taskをuseStateで追加。\n\n    const handleNewTask = (event) => {\n        setTask( event.target.value )\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        if(task === '') return\n        setTodo(todos => [...todos,{ task, isCompleted: false}])\n        setTask('')\n    }\n\n    const handleRemoveTask = index => {\n        const newTodos = [...todos]\n        newTodos.splice(index,1)\n        setTodo(newTodos)\n    }\n\n    //inputタグに入力した値を取得するためにonChangeイベントを設定し、value属性の値に追加したtaskを指定。\n    //onChangeイベントで実行する関数名は、handleNewTask。\n\n    //入力したタスクをtodoリストに保存するためにFormタグを追加。FormタグにはonSubmitイベントを追加します。\n    //onSubmitイベントで実行する関数名は、handleSubmitとします。onSubmitイベントをEnterを押すと発行されます。\n\n    return (\n        <div class=\"wrap\">\n            <div class=\"inner\">\n                <h1>Todo App</h1>\n                <form onSubmit={ handleSubmit }>\n                <input value={ task } placeholder=\"ここにTodoを入力\" onChange={handleNewTask}/></form>\n                <ul>\n                { todos.map((todo, index) => (  //ToDoリストを画面上に表示するため、Todoリストが保存されているtodosをmap関数で展開。\n                <li key={ index }>\n                <span onClick={ () =>handleRemoveTask(index) }>\n                ☑️\n                </span>\n                { todo.task }\n                </li>\n                ))}\n                </ul>\n            </div>\n        </div>\n  );\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}