{"ast":null,"code":"var _jsxFileName = \"/Users/kurusu/todo_app/src/Form.js\";\nimport React, { useState } from 'react';\nimport List from './List';\n\nconst Form = () => {\n  // const initialState = [\n  //     {\n  //         task: 'サンプルテキスト１',\n  //         isCompleted: false\n  //     },\n  //     {\n  //         task: 'サンプルテキスト２',\n  //         isCompleted: false\n  //     },\n  //     {\n  //         task: 'サンプルテキスト３',\n  //         isCompleted: false\n  //     },     \n  // ]\n  const [todos, setTodo] = useState(initialState);\n  const [task, setTask] = useState('');\n\n  const handleNewTask = event => {\n    setTask(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (task === '') return;\n    setTodo(todos => [...todos, {\n      task,\n      isCompleted: false\n    }]);\n    setTask('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Todo App\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"\\u3053\\u3053\\u306BTodo\\u3092\\u5165\\u529B\",\n    onChange: handleNewTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/kurusu/todo_app/src/Form.js"],"names":["React","useState","List","Form","todos","setTodo","initialState","task","setTask","handleNewTask","event","target","value","handleSubmit","preventDefault","isCompleted"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBJ,QAAQ,CAACK,YAAD,CAAjC;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAC7BF,IAAAA,OAAO,CAAEE,KAAK,CAACC,MAAN,CAAaC,KAAf,CAAP;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIH,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACI,cAAN;AACA,QAAGP,IAAI,KAAK,EAAZ,EAAgB;AAChBF,IAAAA,OAAO,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAU;AAAEG,MAAAA,IAAF;AAAQQ,MAAAA,WAAW,EAAE;AAArB,KAAV,CAAV,CAAP;AACAP,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GALD;;AAQA,sBACI;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,IAAA,QAAQ,EAAGK,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,WAAW,EAAC,0CAAnB;AAAgC,IAAA,QAAQ,EAAEJ,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFJ,eAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADJ;AAUH,CA1CD;;AA4CA,eAAeN,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport List from './List'\n\nconst Form = () => {\n    // const initialState = [\n    //     {\n    //         task: 'サンプルテキスト１',\n    //         isCompleted: false\n    //     },\n    //     {\n    //         task: 'サンプルテキスト２',\n    //         isCompleted: false\n    //     },\n    //     {\n    //         task: 'サンプルテキスト３',\n    //         isCompleted: false\n    //     },     \n    // ]\n\n    const [todos, setTodo] = useState(initialState);\n\n    const [task, setTask] = useState('')\n\n    const handleNewTask = (event) => {\n        setTask( event.target.value )\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        if(task === '') return\n        setTodo(todos => [...todos,{ task, isCompleted: false}])\n        setTask('')\n    }\n\n\n    return (\n        <div class=\"wrap\">\n            <div class=\"inner\">\n                <h1>Todo App</h1>\n                <form onSubmit={ handleSubmit }>\n                <input placeholder=\"ここにTodoを入力\" onChange={handleNewTask}/></form>\n                <List />\n            </div>\n        </div>\n  );\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}